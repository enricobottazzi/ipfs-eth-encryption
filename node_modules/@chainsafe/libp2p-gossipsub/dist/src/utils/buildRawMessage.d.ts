import type { PeerId } from '@libp2p/interfaces/peer-id';
import { RPC } from '../message/rpc.js';
import { PublishConfig, TopicStr, ValidateError } from '../types.js';
import { StrictSign, StrictNoSign } from '@libp2p/interfaces/pubsub';
export declare const SignPrefix: Uint8Array;
export declare function buildRawMessage(publishConfig: PublishConfig, topic: TopicStr, transformedData: Uint8Array): Promise<RPC.Message>;
export declare type ValidationResult = {
    valid: true;
    fromPeerId: PeerId | null;
} | {
    valid: false;
    error: ValidateError;
};
export declare function validateToRawMessage(signaturePolicy: typeof StrictNoSign | typeof StrictSign, msg: RPC.Message): Promise<ValidationResult>;
//# sourceMappingURL=buildRawMessage.d.ts.map