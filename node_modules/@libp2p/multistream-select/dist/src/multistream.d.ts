import { Uint8ArrayList } from 'uint8arraylist';
import type { Pushable } from 'it-pushable';
import type { AbortOptions } from '@libp2p/interfaces';
import type { Reader } from 'it-reader';
export declare function encode(buffer: Uint8Array | Uint8ArrayList): Uint8Array;
/**
 * `write` encodes and writes a single buffer
 */
export declare function write(writer: Pushable<Uint8Array>, buffer: Uint8Array | Uint8ArrayList): void;
/**
 * `writeAll` behaves like `write`, except it encodes an array of items as a single write
 */
export declare function writeAll(writer: Pushable<Uint8Array>, buffers: Uint8Array[]): void;
export declare function read(reader: Reader, options?: AbortOptions): Promise<Uint8Array>;
export declare function readString(reader: Reader, options?: AbortOptions): Promise<string>;
//# sourceMappingURL=multistream.d.ts.map