import type { Store } from './store.js';
import type { PeerStore, KeyBook } from '@libp2p/interfaces/peer-store';
import type { PeerId } from '@libp2p/interfaces/peer-id';
export declare class PeerStoreKeyBook implements KeyBook {
    private readonly dispatchEvent;
    private readonly store;
    /**
     * The KeyBook is responsible for keeping the known public keys of a peer
     */
    constructor(dispatchEvent: PeerStore['dispatchEvent'], store: Store);
    /**
     * Set the Peer public key
     */
    set(peerId: PeerId, publicKey: Uint8Array): Promise<void>;
    /**
     * Get Public key of the given PeerId, if stored
     */
    get(peerId: PeerId): Promise<Uint8Array | undefined>;
    delete(peerId: PeerId): Promise<void>;
}
//# sourceMappingURL=key-book.d.ts.map