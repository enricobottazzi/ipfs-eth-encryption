import type { PeerId } from '@libp2p/interfaces/peer-id';
import type { Message, PubSubRPCMessage } from '@libp2p/interfaces/pubsub';
export declare const SignPrefix: Uint8Array;
/**
 * Signs the provided message with the given `peerId`
 */
export declare function signMessage(peerId: PeerId, message: Message, encode: (rpc: PubSubRPCMessage) => Uint8Array): Promise<Message>;
/**
 * Verifies the signature of the given message
 */
export declare function verifySignature(message: Message, encode: (rpc: PubSubRPCMessage) => Uint8Array): Promise<boolean>;
/**
 * Returns the PublicKey associated with the given message.
 * If no valid PublicKey can be retrieved an error will be returned.
 */
export declare function messagePublicKey(message: Message): Promise<Uint8Array>;
//# sourceMappingURL=sign.d.ts.map