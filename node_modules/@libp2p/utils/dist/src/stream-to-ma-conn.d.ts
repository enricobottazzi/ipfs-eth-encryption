import type { Multiaddr } from '@multiformats/multiaddr';
import type { MultiaddrConnection } from '@libp2p/interfaces/transport';
import type { Duplex } from 'it-stream-types';
export interface Timeline {
    /**
     * Connection opening timestamp
     */
    open: number;
    /**
     * Connection upgraded timestamp
     */
    upgraded?: number;
    /**
     * Connection closed timestamp
     */
    close?: number;
}
interface StreamOptions {
    signal?: AbortSignal;
}
interface StreamProperties {
    stream: Duplex<Uint8Array>;
    remoteAddr: Multiaddr;
    localAddr: Multiaddr;
}
/**
 * Convert a duplex iterable into a MultiaddrConnection.
 * https://github.com/libp2p/interface-transport#multiaddrconnection
 */
export declare function streamToMaConnection(props: StreamProperties, options?: StreamOptions): MultiaddrConnection;
export {};
//# sourceMappingURL=stream-to-ma-conn.d.ts.map