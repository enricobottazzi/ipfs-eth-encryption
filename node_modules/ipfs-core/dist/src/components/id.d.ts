/**
 * @typedef {import('libp2p').Libp2p} Libp2p
 * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions
 * @typedef {import('@libp2p/interfaces/peer-id').PeerId} PeerId
 */
/**
 * @param {object} config
 * @param {import('@libp2p/interfaces/peer-id').PeerId} config.peerId
 * @param {import('../types').NetworkService} config.network
 */
export function createId({ peerId, network }: {
    peerId: import('@libp2p/interfaces/peer-id').PeerId;
    network: import('../types').NetworkService;
}): (options?: import("ipfs-core-types/src/root").IDOptions | undefined) => Promise<import("ipfs-core-types/src/root").IDResult>;
export type Libp2p = import('libp2p').Libp2p;
export type AbortOptions = import('ipfs-core-types/src/utils').AbortOptions;
export type PeerId = import('@libp2p/interfaces/peer-id').PeerId;
//# sourceMappingURL=id.d.ts.map