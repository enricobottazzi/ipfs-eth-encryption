/**
 * IPNS - Inter-Planetary Naming System
 *
 * @param {object} config
 * @param {import('../ipns').IPNSAPI} config.ipns
 * @param {import('ipfs-repo').IPFSRepo} config.repo
 * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs
 * @param {import('@libp2p/interfaces/peer-id').PeerId} config.peerId
 * @param {import('ipfs-core-types/src/root').API<{}>["isOnline"]} config.isOnline
 * @param {import('@libp2p/interfaces/keychain').KeyChain} config.keychain
 */
export function createPublish({ ipns, repo, codecs, peerId, isOnline, keychain }: {
    ipns: import('../ipns').IPNSAPI;
    repo: import('ipfs-repo').IPFSRepo;
    codecs: import('ipfs-core-utils/multicodecs').Multicodecs;
    peerId: import('@libp2p/interfaces/peer-id').PeerId;
    isOnline: import('ipfs-core-types/src/root').API<{}>["isOnline"];
    keychain: import('@libp2p/interfaces/keychain').KeyChain;
}): (value: string | import("multiformats").CID, options?: import("ipfs-core-types/src/name").PublishOptions | undefined) => Promise<import("ipfs-core-types/src/name").PublishResult>;
//# sourceMappingURL=publish.d.ts.map