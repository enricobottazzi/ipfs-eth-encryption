export class StatsAPI {
    /**
     * @param {object} config
     * @param {import('ipfs-repo').IPFSRepo} config.repo
     * @param {import('../../types').NetworkService} config.network
     */
    constructor({ repo, network }: {
        repo: import('ipfs-repo').IPFSRepo;
        network: import('../../types').NetworkService;
    });
    repo: (options?: import("ipfs-core-types/dist/src").AbortOptions | undefined) => Promise<import("ipfs-core-types/dist/src/repo").StatResult>;
    bw: (options?: import("ipfs-core-types/dist/src/stats").BWOptions | undefined) => AsyncIterable<import("ipfs-core-types/dist/src/stats").BWResult>;
    bitswap: (options?: import("ipfs-core-types/dist/src").AbortOptions | undefined) => Promise<import("ipfs-core-types/dist/src/bitswap").Stats>;
}
//# sourceMappingURL=index.d.ts.map