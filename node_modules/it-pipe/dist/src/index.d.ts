import type * as it from 'it-stream-types';
export declare const rawPipe: (...fns: any) => any;
export declare const isIterable: (obj: any) => obj is it.Source<any>;
export declare const isDuplex: <TSource, TSink = TSource, RSink = Promise<void>>(obj: any) => obj is it.Duplex<TSource, TSink, RSink>;
export declare type Source<A> = it.Source<A> | (() => it.Source<A>) | it.Duplex<A, any, any>;
export declare type Transform<A, B> = it.Transform<A, B> | it.Duplex<B, A, any>;
export declare type Sink<A, B> = it.Sink<A, B> | it.Duplex<A, any, B>;
export declare function pipe<A>(first: Source<A>): it.Source<A>;
export declare function pipe<A, B>(first: Source<A>, second: Sink<A, B>): B;
export declare function pipe<A, B, C>(first: Source<A>, second: Transform<A, B>, third: Sink<B, C>): C;
export declare function pipe<A, B, C, D>(first: Source<A>, second: Transform<A, B>, third: Transform<B, C>, fourth: Sink<C, D>): D;
export declare function pipe<A, B, C, D, E>(first: Source<A>, second: Transform<A, B>, third: Transform<B, C>, fourth: Transform<C, D>, fifth: Sink<D, E>): E;
export declare function pipe<A, B, C, D, E, F>(first: Source<A>, second: Transform<A, B>, third: Transform<B, C>, fourth: Transform<C, D>, fifth: Transform<D, E>, sixth: Sink<E, F>): F;
export declare function pipe<A, B, C, D, E, F, G>(first: Source<A>, second: Transform<A, B>, third: Transform<B, C>, fourth: Transform<C, D>, fifth: Transform<D, E>, sixth: Transform<E, F>, seventh: Sink<F, G>): G;
export declare function pipe<A, B, C, D, E, F, G, H>(first: Source<A>, second: Transform<A, B>, third: Transform<B, C>, fourth: Transform<C, D>, fifth: Transform<D, E>, sixth: Transform<E, F>, seventh: Transform<F, G>, eighth: Sink<G, H>): H;
export declare function pipe<A, B, C, D, E, F, G, H, I>(first: Source<A>, second: Transform<A, B>, third: Transform<B, C>, fourth: Transform<C, D>, fifth: Transform<D, E>, sixth: Transform<E, F>, seventh: Transform<F, G>, eighth: Transform<G, H>, ninth: Sink<H, I>): I;
export declare function pipe<A, B, C, D, E, F, G, H, I, J>(first: Source<A>, second: Transform<A, B>, third: Transform<B, C>, fourth: Transform<C, D>, fifth: Transform<D, E>, sixth: Transform<E, F>, seventh: Transform<F, G>, eighth: Transform<G, H>, ninth: Transform<H, I>, tenth: Sink<I, J>): J;
//# sourceMappingURL=index.d.ts.map