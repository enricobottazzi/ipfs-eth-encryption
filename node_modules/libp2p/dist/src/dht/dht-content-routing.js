import drain from 'it-drain';
import errCode from 'err-code';
/**
 * Wrapper class to convert events into returned values
 */
export class DHTContentRouting {
    constructor(dht) {
        this.dht = dht;
    }
    async provide(cid) {
        await drain(this.dht.provide(cid));
    }
    async *findProviders(cid, options = {}) {
        for await (const event of this.dht.findProviders(cid, options)) {
            if (event.name === 'PROVIDER') {
                yield* event.providers;
            }
        }
    }
    async put(key, value, options) {
        await drain(this.dht.put(key, value, options));
    }
    async get(key, options) {
        for await (const event of this.dht.get(key, options)) {
            if (event.name === 'VALUE') {
                return event.value;
            }
        }
        throw errCode(new Error('Not found'), 'ERR_NOT_FOUND');
    }
}
//# sourceMappingURL=dht-content-routing.js.map