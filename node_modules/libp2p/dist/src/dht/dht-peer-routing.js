import errCode from 'err-code';
import { messages, codes } from '../errors.js';
/**
 * Wrapper class to convert events into returned values
 */
export class DHTPeerRouting {
    constructor(dht) {
        this.dht = dht;
    }
    async findPeer(peerId, options = {}) {
        for await (const event of this.dht.findPeer(peerId, options)) {
            if (event.name === 'FINAL_PEER') {
                return event.peer;
            }
        }
        throw errCode(new Error(messages.NOT_FOUND), codes.ERR_NOT_FOUND);
    }
    async *getClosestPeers(key, options = {}) {
        for await (const event of this.dht.getClosestPeers(key, options)) {
            if (event.name === 'PEER_RESPONSE') {
                yield* event.closer;
            }
        }
    }
}
//# sourceMappingURL=dht-peer-routing.js.map