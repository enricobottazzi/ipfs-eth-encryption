import type { Codec } from 'protons-runtime';
export interface FetchRequest {
    identifier: string;
}
export declare namespace FetchRequest {
    const codec: () => Codec<FetchRequest>;
    const encode: (obj: FetchRequest) => Uint8Array;
    const decode: (buf: Uint8Array) => FetchRequest;
}
export interface FetchResponse {
    status: FetchResponse.StatusCode;
    data: Uint8Array;
}
export declare namespace FetchResponse {
    enum StatusCode {
        OK = "OK",
        NOT_FOUND = "NOT_FOUND",
        ERROR = "ERROR"
    }
    namespace StatusCode {
        const codec: () => Codec<typeof StatusCode>;
    }
    const codec: () => Codec<FetchResponse>;
    const encode: (obj: FetchResponse) => Uint8Array;
    const decode: (buf: Uint8Array) => FetchResponse;
}
//# sourceMappingURL=proto.d.ts.map