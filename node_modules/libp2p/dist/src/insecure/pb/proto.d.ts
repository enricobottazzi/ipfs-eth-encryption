import type { Codec } from 'protons-runtime';
export interface Exchange {
    id?: Uint8Array;
    pubkey?: PublicKey;
}
export declare namespace Exchange {
    const codec: () => Codec<Exchange>;
    const encode: (obj: Exchange) => Uint8Array;
    const decode: (buf: Uint8Array) => Exchange;
}
export declare enum KeyType {
    RSA = "RSA",
    Ed25519 = "Ed25519",
    Secp256k1 = "Secp256k1",
    ECDSA = "ECDSA"
}
export declare namespace KeyType {
    const codec: () => Codec<typeof KeyType>;
}
export interface PublicKey {
    Type: KeyType;
    Data: Uint8Array;
}
export declare namespace PublicKey {
    const codec: () => Codec<PublicKey>;
    const encode: (obj: PublicKey) => Uint8Array;
    const decode: (buf: Uint8Array) => PublicKey;
}
//# sourceMappingURL=proto.d.ts.map