import { EventEmitter } from '@libp2p/interfaces/events';
import errCode from 'err-code';
import { messages, codes } from '../errors.js';
export class DummyPubSub extends EventEmitter {
    isStarted() {
        return false;
    }
    start() {
    }
    stop() {
    }
    get globalSignaturePolicy() {
        throw errCode(new Error(messages.PUBSUB_DISABLED), codes.ERR_PUBSUB_DISABLED);
    }
    get multicodecs() {
        throw errCode(new Error(messages.PUBSUB_DISABLED), codes.ERR_PUBSUB_DISABLED);
    }
    getPeers() {
        throw errCode(new Error(messages.PUBSUB_DISABLED), codes.ERR_PUBSUB_DISABLED);
    }
    getTopics() {
        throw errCode(new Error(messages.PUBSUB_DISABLED), codes.ERR_PUBSUB_DISABLED);
    }
    subscribe() {
        throw errCode(new Error(messages.PUBSUB_DISABLED), codes.ERR_PUBSUB_DISABLED);
    }
    unsubscribe() {
        throw errCode(new Error(messages.PUBSUB_DISABLED), codes.ERR_PUBSUB_DISABLED);
    }
    getSubscribers() {
        throw errCode(new Error(messages.PUBSUB_DISABLED), codes.ERR_PUBSUB_DISABLED);
    }
    async publish() {
        throw errCode(new Error(messages.PUBSUB_DISABLED), codes.ERR_PUBSUB_DISABLED);
    }
}
//# sourceMappingURL=dummy-pubsub.js.map