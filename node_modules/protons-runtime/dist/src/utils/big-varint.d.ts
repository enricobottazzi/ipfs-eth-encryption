import type { Uint8ArrayList } from 'uint8arraylist';
export declare const unsigned: {
    encodingLength(value: bigint): number;
    encode(value: bigint, buf: Uint8ArrayList | Uint8Array): void;
    decode(buf: Uint8ArrayList | Uint8Array, offset?: number): bigint;
};
export declare const signed: {
    encodingLength(value: bigint): number;
    encode(value: bigint, buf: Uint8ArrayList | Uint8Array, offset?: number): void;
    decode(buf: Uint8ArrayList | Uint8Array, offset?: number): bigint;
};
export declare const zigzag: {
    encodingLength(value: bigint): number;
    encode(value: bigint, buf: Uint8ArrayList | Uint8Array, offset?: number): void;
    decode(buf: Uint8ArrayList | Uint8Array, offset?: number): bigint;
};
//# sourceMappingURL=big-varint.d.ts.map